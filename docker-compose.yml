# docker compose retirado diretamente da documentação oficial https://airflow.apache.org/docs/apache-airflow/2.10.4/docker-compose.yaml
# adaptado para melhor performance e inserção do northwind
---
x-airflow-common:
 &airflow-common
 image: ${AIRFLOW_IMAGE_NAME:-apache/airflow:2.10.4}
 environment:
   &airflow-common-env
   POSTGRES_CONN: postgresql://northwind_user:thewindisblowing@northwind_db:5432/northwind
   AIRFLOW__CORE__EXECUTOR: LocalExecutor 
   AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres/airflow
   AIRFLOW__CORE__FERNET_KEY: ''
   AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION: 'true'
   AIRFLOW__CORE__LOAD_EXAMPLES: 'false'
   AIRFLOW__API__AUTH_BACKENDS: 'airflow.api.auth.backend.basic_auth,airflow.api.auth.backend.session'
   AIRFLOW__SCHEDULER__ENABLE_HEALTH_CHECK: 'true'
   _PIP_ADDITIONAL_REQUIREMENTS: ${_PIP_ADDITIONAL_REQUIREMENTS:- pandas pyarrow sqlalchemy psycopg2-binary}
 volumes:
   - ${AIRFLOW_PROJ_DIR:-.}/dags:/opt/airflow/dags
   - ${AIRFLOW_PROJ_DIR:-.}/logs:/opt/airflow/logs
   - ${AIRFLOW_PROJ_DIR:-.}/plugins:/opt/airflow/plugins
   - ${AIRFLOW_PROJ_DIR:-.}/data:/opt/airflow/data
   - ${AIRFLOW_PROJ_DIR:-.}/northwind-etl:/opt/airflow/northwind-etl
 user: "${AIRFLOW_UID:-50000}:0"
 depends_on:
   &airflow-common-depends-on
   postgres:
     condition: service_healthy

services:
 docker-socket-proxy:
  image: docker-socket-proxy:latest
  environment:
    CONTAINERS: 1
    IMAGES: 1
    AUTH: 1
    POST: 1
    VOLUMES: 1
  privileged: true
  volumes:
    - /var/run/docker.sock:/var/run/docker.sock

 postgres:
   image: postgres:13
   environment:
     POSTGRES_USER: airflow
     POSTGRES_PASSWORD: airflow
     POSTGRES_DB: airflow
   volumes:
     - postgres-db-volume:/var/lib/postgresql/data
   healthcheck:
     test: ["CMD", "pg_isready", "-U", "airflow"]
     interval: 10s
     retries: 5
     start_period: 5s
   restart: always

 northwind_db: 
   image: postgres:12
   environment:
     POSTGRES_DB: northwind
     POSTGRES_USER: northwind_user
     POSTGRES_PASSWORD: thewindisblowing
   volumes:
     - ./dbdata:/var/lib/postgresql/data
     - ./data/northwind.sql:/docker-entrypoint-initdb.d/northwind.sql
   ports:
     - "5433:5432"
   healthcheck:
     test: ["CMD", "pg_isready", "-U", "northwind_user", "-d", "northwind"]
     interval: 10s
     retries: 5
     start_period: 5s

 airflow-webserver:
   <<: *airflow-common
   command: webserver
   ports:
     - "8080:8080"
   healthcheck:
     test: ["CMD", "curl", "--fail", "http://localhost:8080/health"]
     interval: 30s
     timeout: 10s
     retries: 5
     start_period: 30s
   restart: always
   depends_on:
     <<: *airflow-common-depends-on
     airflow-init:
       condition: service_completed_successfully

 airflow-scheduler:
   <<: *airflow-common
   command: scheduler
   healthcheck:
     test: ["CMD", "curl", "--fail", "http://localhost:8974/health"]
     interval: 30s
     timeout: 10s
     retries: 5
     start_period: 30s
   restart: always
   depends_on:
     <<: *airflow-common-depends-on
     airflow-init:
       condition: service_completed_successfully

 airflow-init:
   <<: *airflow-common
   entrypoint: /bin/bash
   command:
     - -c
     - |
       mkdir -p /sources/logs /sources/dags /sources/plugins
       chown -R "${AIRFLOW_UID}:0" /sources/{logs,dags,plugins}
       exec /entrypoint airflow version
   environment:
     <<: *airflow-common-env
     _AIRFLOW_DB_MIGRATE: 'true'
     _AIRFLOW_WWW_USER_CREATE: 'true'
     _AIRFLOW_WWW_USER_USERNAME: ${_AIRFLOW_WWW_USER_USERNAME:-airflow}
     _AIRFLOW_WWW_USER_PASSWORD: ${_AIRFLOW_WWW_USER_PASSWORD:-airflow}
     _PIP_ADDITIONAL_REQUIREMENTS: ''
   user: "0:0"
   volumes:
     - ${AIRFLOW_PROJ_DIR:-.}:/sources

volumes:
 postgres-db-volume: